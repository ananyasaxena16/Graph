class Solution {
    public int numIslands(char[][] grid) {
        int count = 0;
        int x = grid.length;
        int y = grid[0].length;
        for(int i = 0; i<x; i++)
        {
            for(int j = 0; j<y; j++)
            {
                if(grid[i][j]=='1')
                {
                    graph(i, j, grid);
                    count++;
                }
            }
        }
        return count;
      
    }
    public static int[][] dir = {{-1,0}, {0, 1}, {1, 0},{0, -1}};
    public void graph(int i, int j, char[][] grid){
        grid[i][j] = '2';
        //logic
        for(int x = 0; x<dir.length; x++)
        {
            int nr = i+dir[x][0];
            int nc = j+dir[x][1];
            if(nr<0||nc<0||nr>grid.length-1||nc>grid[0].length-1||grid[nr][nc]!='1')
            {
                continue;
            }
            graph(nr, nc, grid);
        }
        
    }
}
